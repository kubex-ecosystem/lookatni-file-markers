---
lookatni:
  version: "2.0"
  start: "🔥🔥🔥 FILE:"
  end: " 🔥🔥🔥"
  format: "{start} {filename} {end}"
---

🔥🔥🔥 FILE: demo/README.md 🔥🔥🔥
# LookAtni Custom Markers Demo

Esta é uma demonstração do sistema de **marcadores customizados** do LookAtni!

## Características

- ✨ Marcadores visuais personalizáveis
- 🎨 Suporte a diferentes formatos (HTML, Markdown, Code)
- 🛡️ Backward compatibility total
- 🚀 Flexibilidade máxima

## Como usar

```bash
# Listar presets disponíveis
lookatni --list-presets

# Gerar com preset HTML
lookatni generate ./src ./output.marked --marker-preset html

# Gerar com marcadores visuais
lookatni generate ./src ./output.marked --marker-preset visual
```

🔥🔥🔥 FILE: demo/config.yaml 🔥🔥🔥
project:
  name: "LookAtni Demo"
  version: "2.0"
  description: "Demonstração de marcadores customizados"

markers:
  enabled: true
  style: "visual"
  formats:
    - html
    - markdown
    - code
    - visual

features:
  - "Marcadores adaptativos"
  - "Metadados YAML"
  - "Presets predefinidos"
  - "Compatibilidade total"

🔥🔥🔥 FILE: demo/example.go 🔥🔥🔥
// Package demo demonstrates LookAtni custom markers functionality.
package demo

import (
	"fmt"
	"time"
)

// DemoConfig represents the configuration for marker demonstration.
type DemoConfig struct {
	Style   string   `yaml:"style"`
	Formats []string `yaml:"formats"`
}

// RunDemo shows how custom markers work in practice.
func RunDemo() {
	fmt.Println("🔥 LookAtni Custom Markers Demo!")
	fmt.Println("⚡ Marcadores adaptativos em ação!")

	time.Sleep(1 * time.Second)

	fmt.Println("✅ Demo completed successfully!")
}

func main() {
	RunDemo()
}
