{
  "name": "lookatni-revolution",
  "displayName": "LookAtBi Revolution",
  "description": "Revolutionary marked file system for seamless code sharing and project reconstruction. Extract files from marked content, generate markers from projects, validate integrity, and more!",
  "version": "1.0.0",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other",
    "Linters",
    "Formatters",
    "Debuggers"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": "limited",
      "description": "LookAtni Revolution supports untrusted workspaces with limited functionality. Some features may be restricted for security reasons."
    }
  },
  "extensionKind": [
    "ui"
  ],
  "api": "none",
  "publishConfig": {
    "access": "public"
  },
  "config": {
    "lookatni.defaultMaxFileSize": {
      "type": "number",
      "default": 1000,
      "description": "Default maximum file size in KB for generation"
    },
    "lookatni.showStatistics": {
      "type": "boolean",
      "default": true,
      "description": "Show statistics after operations"
    },
    "lookatni.autoValidate": {
      "type": "boolean",
      "default": false,
      "description": "Automatically validate files after generation"
    }
  },
  "exports": {
    ".": {
      "import": "./dist/extension.js",
      "default": "./dist/extension.js"
    },
    "./package.json": "./package.json",
    "./resources/icon.png": "./resources/icon.png",
    "./resources/icon.svg": "./resources/icon.svg"
  },
  "readme": "README.md",
  "markdown": "github",
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "publisher": "rafa-mori",
  "author": {
    "name": "Rafael Mori",
    "email": "faelmori@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/rafa-mori/lookatni-revolution.git"
  },
  "homepage": "https://github.com/rafa-mori/lookatni-revolution#readme",
  "bugs": {
    "url": "https://github.com/rafa-mori/lookatni-revolution/issues"
  },
  "keywords": [
    "file-markers",
    "code-sharing",
    "project-reconstruction",
    "development-tools",
    "cli-integration",
    "productivity",
    "lookatni",
    "vscode-extension"
  ],
  "qna": "marketplace",
  "contributes": {
    "commands": [
      {
        "id": "lookatni-revolution.extractFiles",
        "command": "lookatni-revolution.extractFiles",
        "title": "LookAtni: Extract Files"
      },
      {
        "id": "lookatni-revolution.generateMarkers",
        "command": "lookatni-revolution.generateMarkers",
        "title": "LookAtni: Generate Markers"
      },
      {
        "id": "lookatni-revolution.validateMarkers",
        "command": "lookatni-revolution.validateMarkers",
        "title": "LookAtni: Validate Markers"
      },
      {
        "id": "lookatni-revolution.quickDemo",
        "command": "lookatni-revolution.quickDemo",
        "title": "LookAtni: Quick Demo"
      },
      {
        "id": "lookatni-revolution.showStatistics",
        "command": "lookatni-revolution.showStatistics",
        "title": "LookAtni: Show Statistics"
      },
      {
        "id": "lookatni-revolution.openCLI",
        "command": "lookatni-revolution.openCLI",
        "title": "LookAtni: Open CLI Tools"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "lookatni-revolution.extractFiles",
          "when": "resourceExtname == .txt",
          "group": "lookatni"
        },
        {
          "command": "lookatni-revolution.generateMarkers",
          "when": "explorerResourceIsFolder",
          "group": "lookatni"
        }
      ],
      "commandPalette": [
        {
          "command": "lookatni-revolution.extractFiles",
          "when": "true"
        },
        {
          "command": "lookatni-revolution.generateMarkers",
          "when": "true"
        },
        {
          "command": "lookatni-revolution.validateMarkers",
          "when": "true"
        },
        {
          "command": "lookatni-revolution.quickDemo",
          "when": "true"
        },
        {
          "command": "lookatni-revolution.showStatistics",
          "when": "true"
        },
        {
          "command": "lookatni-revolution.openCLI",
          "when": "true"
        }
      ]
    },
    "keybindings": [
      {
        "command": "lookatni-revolution.extractFiles",
        "key": "ctrl+shift+l e",
        "mac": "cmd+shift+l e"
      },
      {
        "command": "lookatni-revolution.generateMarkers",
        "key": "ctrl+shift+l g",
        "mac": "cmd+shift+l g"
      },
      {
        "command": "lookatni-revolution.quickDemo",
        "key": "ctrl+shift+l d",
        "mac": "cmd+shift+l d"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "lookatniExplorer",
          "name": "LookAtni Files",
          "when": "workspaceFolderCount > 0",
          "icon": "resources/icon.svg",
          "type": "tree",
          "contextualTitle": "LookAtni Explorer",
          "visibility": "visible",
          "initialSize": 0.3,
          "accessibilityHelpContent": "Use the LookAtni Explorer to manage your marked files and operations. You can extract files, generate markers, and validate them directly from this view."
        }
      ]
    },
    "configuration": {
      "title": "LookAtni Revolution",
      "properties": {
        "lookatni.defaultMaxFileSize": {
          "type": "number",
          "default": 1000,
          "description": "Default maximum file size in KB for generation"
        },
        "lookatni.showStatistics": {
          "type": "boolean",
          "default": true,
          "description": "Show statistics after operations"
        },
        "lookatni.autoValidate": {
          "type": "boolean",
          "default": false,
          "description": "Automatically validate files after generation"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.102.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "eslint": "^9.25.1",
    "esbuild": "^0.25.3",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.3",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}
