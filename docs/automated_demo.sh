#!/usr/bin/env bash
#
# automated_demo.sh - Automated demo sequence for LookAtni File Markers
#
# This script prepares a clean environment and executes the demo sequence
# programmatically to ensure smooth recording without manual errors.
#
# Usage: ./automated_demo.sh
#

set -e

DEMO_DIR="demo-automated"
DEMO_FILE="${DEMO_DIR}/ai-generated-project.txt"
EXTRACT_DIR="${DEMO_DIR}/extracted-project"

echo "üßπ Cleaning previous demo files..."
rm -rf "${DEMO_DIR}" 2>/dev/null || true
rm -rf lookatni-demo-* 2>/dev/null || true

echo "üìÅ Creating clean demo environment..."
mkdir -p "${DEMO_DIR}"

echo "ü§ñ Creating AI-generated project content with invisible markers..."

# Create the invisible character
FS_CHAR=$(printf '\034')  # ASCII 28 (File Separator)

cat > "${DEMO_FILE}" << EOF
This is an AI-generated React project with invisible markers.
You can copy this content and extract it into a full project structure!

//${FS_CHAR}/ package.json /${FS_CHAR}//
{
  "name": "ai-demo-project",
  "version": "1.0.0",
  "description": "Demo project generated by AI with LookAtni markers",
  "main": "src/index.js",
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1"
  },
  "browserslist": {
    "production": [">0.2%", "not dead", "not op_mini all"],
    "development": ["last 1 chrome version", "last 1 firefox version", "last 1 safari version"]
  }
}

//${FS_CHAR}/ README.md /${FS_CHAR}//
# AI Demo Project

This project was generated by AI and extracted using **LookAtni File Markers**!

## Features
- ‚ö° React-based frontend
- üé® Modern styling with CSS modules  
- üîÑ Hot reloading development
- üì¶ Production-ready build

## Getting Started

\`\`\`bash
npm install
npm start
\`\`\`

Generated with invisible Unicode markers - completely seamless extraction!

//${FS_CHAR}/ src/index.js /${FS_CHAR}//
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

//${FS_CHAR}/ src/App.js /${FS_CHAR}//
import React, { useState } from 'react';
import './App.css';

function App() {
  const [count, setCount] = useState(0);

  return (
    <div className="App">
      <header className="App-header">
        <h1>üöÄ AI-Generated React App</h1>
        <p>Extracted with LookAtni File Markers!</p>
        
        <div className="counter">
          <button onClick={() => setCount(count - 1)}>-</button>
          <span className="count">{count}</span>
          <button onClick={() => setCount(count + 1)}>+</button>
        </div>
        
        <p className="description">
          This entire project was generated by AI in a single document,
          then extracted into perfect file structure using invisible markers.
        </p>
      </header>
    </div>
  );
}

export default App;

//${FS_CHAR}/ src/App.css /${FS_CHAR}//
.App {
  text-align: center;
}

.App-header {
  background-color: #282c34;
  padding: 20px;
  color: white;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
}

.counter {
  margin: 20px 0;
  display: flex;
  align-items: center;
  gap: 20px;
}

.counter button {
  background: #61dafb;
  border: none;
  color: #282c34;
  font-size: 24px;
  font-weight: bold;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  cursor: pointer;
  transition: transform 0.2s;
}

.counter button:hover {
  transform: scale(1.1);
}

.count {
  font-size: 48px;
  font-weight: bold;
  color: #61dafb;
  min-width: 100px;
}

.description {
  font-size: 16px;
  max-width: 600px;
  line-height: 1.5;
  margin-top: 30px;
  opacity: 0.8;
}

//${FS_CHAR}/ src/index.css /${FS_CHAR}//
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

* {
  box-sizing: border-box;
}

//${FS_CHAR}/ public/index.html /${FS_CHAR}//
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="AI-generated React app extracted with LookAtni" />
    <title>AI Demo Project - LookAtni File Markers</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

//${FS_CHAR}/ .gitignore /${FS_CHAR}//
# Dependencies
/node_modules
/.pnp
.pnp.js

# Production
/build

# Environment
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# IDE
.vscode/
.idea/
EOF

echo "‚úÖ AI-generated project file created with invisible markers!"
echo "üìç Location: ${DEMO_FILE}"
echo ""
echo "üé¨ Demo sequence ready! Now you can:"
echo ""
echo "1. Start screen recording (Chronicler or OBS)"
echo "2. Open VS Code in this directory: code ."
echo "3. Open the file: ${DEMO_FILE}"
echo "4. Right-click ‚Üí 'LookAtni: Extract Files'"
echo "5. Choose destination: ${EXTRACT_DIR}"
echo "6. Watch the magic happen!"
echo ""
echo "üìä The demo will show:"
echo "   ‚Ä¢ AI-generated content with invisible markers"
echo "   ‚Ä¢ Complete React project extraction"
echo "   ‚Ä¢ Perfect file structure creation"
echo "   ‚Ä¢ Zero manual file creation needed"
echo ""
echo "üöÄ Ready to record the golden feature in action!"
